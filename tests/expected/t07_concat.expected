local a = b .. c

function()
--upvalues  _ENV*
--[local symbols] a
  local
  --[symbols]
    a --local symbol any   const
  --[expressions]
    --[binary expr start] any
     --[suffixed expr start] any
      --[primary start] any
        b --global symbol any 
      --[primary end]
     --[suffixed expr end]
    ..
     --[suffixed expr start] any
      --[primary start] any
        c --global symbol any 
      --[primary end]
     --[suffixed expr end]
    --[binary expr end]
end
function()
--upvalues  _ENV*
--[local symbols] a
  local
  --[symbols]
    a --local symbol any   const
  --[expressions]
    --[binary expr start] any
     --[suffixed expr start] any
      --[primary start] any
        b --global symbol any 
      --[primary end]
     --[suffixed expr end]
    ..
     --[suffixed expr start] any
      --[primary start] any
        c --global symbol any 
      --[primary end]
     --[suffixed expr end]
    --[binary expr end]
end
define Proc%1
L0 (entry)
	LOADGLOBAL {Upval(_ENV), 'b' Ks(0)} {T(1)}
	LOADGLOBAL {Upval(_ENV), 'c' Ks(1)} {T(2)}
	CONCAT {T(1), T(2)} {T(0)}
	MOV {T(0)} {local(a, 0)}
	RET {L1}
L1 (exit)
digraph Proc1 {
L0 [shape=none, margin=0, label=<<TABLE BORDER="1" CELLBORDER="0">
<TR><TD><B>L0</B></TD></TR>
<TR><TD>LOADGLOBAL {Upval(_ENV), 'b' Ks(0)} {T(1)}</TD></TR>
<TR><TD>LOADGLOBAL {Upval(_ENV), 'c' Ks(1)} {T(2)}</TD></TR>
<TR><TD>CONCAT {T(1), T(2)} {T(0)}</TD></TR>
<TR><TD>MOV {T(0)} {local(a, 0)}</TD></TR>
<TR><TD>RET {L1}</TD></TR>
</TABLE>>];
L0 -> L1
}
local hello = 'hello ' .. 'world'

function()
--upvalues  _ENV*
--[local symbols] hello
  local
  --[symbols]
    hello --local symbol any   const
  --[expressions]
    --[binary expr start] any
     'hello '
    ..
     'world'
    --[binary expr end]
end
function()
--upvalues  _ENV*
--[local symbols] hello
  local
  --[symbols]
    hello --local symbol any   const
  --[expressions]
    --[binary expr start] any
     'hello '
    ..
     'world'
    --[binary expr end]
end
define Proc%1
L0 (entry)
	CONCAT {'hello ' Ks(0), 'world' Ks(1)} {T(0)}
	MOV {T(0)} {local(hello, 0)}
	RET {L1}
L1 (exit)
digraph Proc1 {
L0 [shape=none, margin=0, label=<<TABLE BORDER="1" CELLBORDER="0">
<TR><TD><B>L0</B></TD></TR>
<TR><TD>CONCAT {'hello ' Ks(0), 'world' Ks(1)} {T(0)}</TD></TR>
<TR><TD>MOV {T(0)} {local(hello, 0)}</TD></TR>
<TR><TD>RET {L1}</TD></TR>
</TABLE>>];
L0 -> L1
}
local y = "ab"..(1).."cd"..(1.5)

function()
--upvalues  _ENV*
--[local symbols] y
  local
  --[symbols]
    y --local symbol any   const
  --[expressions]
    --[binary expr start] any
     'ab'
    ..
     --[binary expr start] any
      --[suffixed expr start] integer
       --[primary start] integer
        1
       --[primary end]
      --[suffixed expr end]
     ..
      --[binary expr start] any
       'cd'
      ..
       --[suffixed expr start] number
        --[primary start] number
         1.5000000000000000
        --[primary end]
       --[suffixed expr end]
      --[binary expr end]
     --[binary expr end]
    --[binary expr end]
end
function()
--upvalues  _ENV*
--[local symbols] y
  local
  --[symbols]
    y --local symbol any   const
  --[expressions]
    --[binary expr start] any
     'ab'
    ..
     --[binary expr start] any
      --[suffixed expr start] integer
       --[primary start] integer
        1
       --[primary end]
      --[suffixed expr end]
     ..
      --[binary expr start] any
       'cd'
      ..
       --[suffixed expr start] number
        --[primary start] number
         1.5000000000000000
        --[primary end]
       --[suffixed expr end]
      --[binary expr end]
     --[binary expr end]
    --[binary expr end]
end
define Proc%1
L0 (entry)
	CONCAT {'cd' Ks(1), 1.5E0 Kflt(0)} {T(0)}
	CONCAT {1 Kint(0), T(0)} {T(0)}
	CONCAT {'ab' Ks(0), T(0)} {T(0)}
	MOV {T(0)} {local(y, 0)}
	RET {L1}
L1 (exit)
digraph Proc1 {
L0 [shape=none, margin=0, label=<<TABLE BORDER="1" CELLBORDER="0">
<TR><TD><B>L0</B></TD></TR>
<TR><TD>CONCAT {'cd' Ks(1), 1.5E0 Kflt(0)} {T(0)}</TD></TR>
<TR><TD>CONCAT {1 Kint(0), T(0)} {T(0)}</TD></TR>
<TR><TD>CONCAT {'ab' Ks(0), T(0)} {T(0)}</TD></TR>
<TR><TD>MOV {T(0)} {local(y, 0)}</TD></TR>
<TR><TD>RET {L1}</TD></TR>
</TABLE>>];
L0 -> L1
}
local x = 1.
local y = x .. ' test ' .. x

function()
--upvalues  _ENV*
--[local symbols] x, y
  local
  --[symbols]
    x --local symbol any   const
  --[expressions]
    1.0000000000000000
  local
  --[symbols]
    y --local symbol any   const
  --[expressions]
    --[binary expr start] any
     --[suffixed expr start] any
      --[primary start] any
        x --local symbol any   const
      --[primary end]
     --[suffixed expr end]
    ..
     --[binary expr start] any
      ' test '
     ..
      --[suffixed expr start] any
       --[primary start] any
         x --local symbol any   const
       --[primary end]
      --[suffixed expr end]
     --[binary expr end]
    --[binary expr end]
end
function()
--upvalues  _ENV*
--[local symbols] x, y
  local
  --[symbols]
    x --local symbol number   const
  --[expressions]
    1.0000000000000000
  local
  --[symbols]
    y --local symbol any   const
  --[expressions]
    --[binary expr start] any
     --[suffixed expr start] number
      --[primary start] number
        x --local symbol number   const
      --[primary end]
     --[suffixed expr end]
    ..
     --[binary expr start] any
      ' test '
     ..
      --[suffixed expr start] number
       --[primary start] number
         x --local symbol number   const
       --[primary end]
      --[suffixed expr end]
     --[binary expr end]
    --[binary expr end]
end
define Proc%1
L0 (entry)
	MOVf {1E0 Kflt(0)} {Tflt(0)}
	CONCAT {' test ' Ks(0), Tflt(0)} {T(0)}
	CONCAT {Tflt(0), T(0)} {T(0)}
	MOV {T(0)} {local(y, 0)}
	RET {L1}
L1 (exit)
digraph Proc1 {
L0 [shape=none, margin=0, label=<<TABLE BORDER="1" CELLBORDER="0">
<TR><TD><B>L0</B></TD></TR>
<TR><TD>MOVf {1E0 Kflt(0)} {Tflt(0)}</TD></TR>
<TR><TD>CONCAT {' test ' Ks(0), Tflt(0)} {T(0)}</TD></TR>
<TR><TD>CONCAT {Tflt(0), T(0)} {T(0)}</TD></TR>
<TR><TD>MOV {T(0)} {local(y, 0)}</TD></TR>
<TR><TD>RET {L1}</TD></TR>
</TABLE>>];
L0 -> L1
}
local x = 1.
local y = x .. ' test ' .. x
local z = 2.
local a = x+1 .. ' ' .. y .. ' ' .. z+2
function()
--upvalues  _ENV*
--[local symbols] x, y, z, a
  local
  --[symbols]
    x --local symbol any   const
  --[expressions]
    1.0000000000000000
  local
  --[symbols]
    y --local symbol any   const
  --[expressions]
    --[binary expr start] any
     --[suffixed expr start] any
      --[primary start] any
        x --local symbol any   const
      --[primary end]
     --[suffixed expr end]
    ..
     --[binary expr start] any
      ' test '
     ..
      --[suffixed expr start] any
       --[primary start] any
         x --local symbol any   const
       --[primary end]
      --[suffixed expr end]
     --[binary expr end]
    --[binary expr end]
  local
  --[symbols]
    z --local symbol any   const
  --[expressions]
    2.0000000000000000
  local
  --[symbols]
    a --local symbol any   const
  --[expressions]
    --[binary expr start] any
     --[binary expr start] any
      --[suffixed expr start] any
       --[primary start] any
         x --local symbol any   const
       --[primary end]
      --[suffixed expr end]
     +
      1
     --[binary expr end]
    ..
     --[binary expr start] any
      ' '
     ..
      --[binary expr start] any
       --[suffixed expr start] any
        --[primary start] any
          y --local symbol any   const
        --[primary end]
       --[suffixed expr end]
      ..
       --[binary expr start] any
        ' '
       ..
        --[binary expr start] any
         --[suffixed expr start] any
          --[primary start] any
            z --local symbol any   const
          --[primary end]
         --[suffixed expr end]
        +
         2
        --[binary expr end]
       --[binary expr end]
      --[binary expr end]
     --[binary expr end]
    --[binary expr end]
end
function()
--upvalues  _ENV*
--[local symbols] x, y, z, a
  local
  --[symbols]
    x --local symbol number   const
  --[expressions]
    1.0000000000000000
  local
  --[symbols]
    y --local symbol any   const
  --[expressions]
    --[binary expr start] any
     --[suffixed expr start] number
      --[primary start] number
        x --local symbol number   const
      --[primary end]
     --[suffixed expr end]
    ..
     --[binary expr start] any
      ' test '
     ..
      --[suffixed expr start] number
       --[primary start] number
         x --local symbol number   const
       --[primary end]
      --[suffixed expr end]
     --[binary expr end]
    --[binary expr end]
  local
  --[symbols]
    z --local symbol number   const
  --[expressions]
    2.0000000000000000
  local
  --[symbols]
    a --local symbol any   const
  --[expressions]
    --[binary expr start] any
     --[binary expr start] number
      --[suffixed expr start] number
       --[primary start] number
         x --local symbol number   const
       --[primary end]
      --[suffixed expr end]
     +
      1
     --[binary expr end]
    ..
     --[binary expr start] any
      ' '
     ..
      --[binary expr start] any
       --[suffixed expr start] any
        --[primary start] any
          y --local symbol any   const
        --[primary end]
       --[suffixed expr end]
      ..
       --[binary expr start] any
        ' '
       ..
        --[binary expr start] number
         --[suffixed expr start] number
          --[primary start] number
            z --local symbol number   const
          --[primary end]
         --[suffixed expr end]
        +
         2
        --[binary expr end]
       --[binary expr end]
      --[binary expr end]
     --[binary expr end]
    --[binary expr end]
end
define Proc%1
L0 (entry)
	MOVf {1E0 Kflt(0)} {Tflt(0)}
	CONCAT {' test ' Ks(0), Tflt(0)} {T(0)}
	CONCAT {Tflt(0), T(0)} {T(0)}
	MOV {T(0)} {local(y, 0)}
	MOVf {2E0 Kflt(1)} {Tflt(1)}
	ADDfi {Tflt(0), 1 Kint(0)} {Tflt(2)}
	ADDfi {Tflt(1), 2 Kint(1)} {Tflt(3)}
	CONCAT {' ' Ks(1), Tflt(3)} {T(0)}
	CONCAT {local(y, 0), T(0)} {T(0)}
	CONCAT {' ' Ks(1), T(0)} {T(0)}
	CONCAT {Tflt(2), T(0)} {T(0)}
	MOV {T(0)} {local(a, 1)}
	RET {L1}
L1 (exit)
digraph Proc1 {
L0 [shape=none, margin=0, label=<<TABLE BORDER="1" CELLBORDER="0">
<TR><TD><B>L0</B></TD></TR>
<TR><TD>MOVf {1E0 Kflt(0)} {Tflt(0)}</TD></TR>
<TR><TD>CONCAT {' test ' Ks(0), Tflt(0)} {T(0)}</TD></TR>
<TR><TD>CONCAT {Tflt(0), T(0)} {T(0)}</TD></TR>
<TR><TD>MOV {T(0)} {local(y, 0)}</TD></TR>
<TR><TD>MOVf {2E0 Kflt(1)} {Tflt(1)}</TD></TR>
<TR><TD>ADDfi {Tflt(0), 1 Kint(0)} {Tflt(2)}</TD></TR>
<TR><TD>ADDfi {Tflt(1), 2 Kint(1)} {Tflt(3)}</TD></TR>
<TR><TD>CONCAT {' ' Ks(1), Tflt(3)} {T(0)}</TD></TR>
<TR><TD>CONCAT {local(y, 0), T(0)} {T(0)}</TD></TR>
<TR><TD>CONCAT {' ' Ks(1), T(0)} {T(0)}</TD></TR>
<TR><TD>CONCAT {Tflt(2), T(0)} {T(0)}</TD></TR>
<TR><TD>MOV {T(0)} {local(a, 1)}</TD></TR>
<TR><TD>RET {L1}</TD></TR>
</TABLE>>];
L0 -> L1
}
